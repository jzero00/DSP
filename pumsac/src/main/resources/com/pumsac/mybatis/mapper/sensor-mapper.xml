<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sensor-mapper">
	<update id="insertDangerData" parameterType="sensorInfo">
		INSERT INTO SENSORINFO (NO, TYPE, VAL, ROOMNO, REASON, READYN, CheckDate, regDate)
		VALUES (SENSORINFO_SEQ.nextval, #{type}, ${val}, #{roomNo}, #{reason}, #{readYn}, #{checkDate}, sysdate)
	</update>
	
	<update id="mergeSetSensorInfo" parameterType="setSensor">
		MERGE INTO setsensor
		USING dual
		ON (roomno = #{roomNo})
		WHEN MATCHED THEN
		  UPDATE 
		  SET
		    TEMPERATURED = #{temperatured}
		    ,HUMIDITY = #{humidity}
		    ,DISTANCE = #{distance}
		    ,DISCOMFORT_INDEX = #{discomfortIndex}
		WHEN NOT MATCHED THEN
		  INSERT (ROOMNO, TEMPERATURED, HUMIDITY, DISTANCE, DISCOMFORT_INDEX, REGDATE)
		  VALUES (#{roomNo}, #{temperatured}, #{humidity}, #{distance}, #{discomfortIndex}, sysdate)
	</update>
	
	<select id="selectDangerSensorDataByNo" parameterType="Integer" resultType="sensorInfo">
		SELECT *
		FROM sensorinfo
		WHERE no = #{no}
	</select>
	
	<sql id="search">
		<if test="cri.searchType != null and cri.searchType == 'no'.toString()">
			AND s.no LIKE '%'||#{cri.keyword}||'%'
		</if>
		<if test="cri.searchType != null and cri.searchType == 'rn'.toString()">
			AND m.roomName  LIKE '%'||#{cri.keyword}||'%'
		</if>
	</sql>
	
	<select id="selectDangerSensorDataTotalCountByRoomNo" parameterType="Integer" resultType="Integer">
		SELECT count(*)
		FROM sensorinfo
		WHERE roomno = #{roomNo}
	</select>
	<select id="selectDangerSensorDataByRoomNo" parameterType="hashmap" resultType="sensorInfo">
		SELECT s.no AS no, type, val, roomno,
				s.reason AS reason,
				s.readyn AS readyn,
				s.regdate AS regdate,
				s.checkdate AS checkdate,
				m.roomName AS roomName
		FROM sensorinfo s, meetingroominfo m
		WHERE s.roomno = m.no
		AND s.roomno = #{roomNo}
		<include refid="search"></include>
		ORDER BY s.no DESC
	</select>
	
	<select id="selectSettingSensorInfo" parameterType="Integer" resultType="setSensor">
		SELECT s.roomno AS roomNo
		    ,s.temperatured AS temperatured
		    ,s.humidity AS humidity
		    ,s.distance AS distance
		    ,s.discomfort_index AS discomfort_index
		    ,s.regdate AS regdate
		    ,m.roomname AS roomName
		FROM setSensor s , meetingroominfo m
		WHERE s.roomno = m.no
		AND s.roomno = #{no}
	</select>
	
	<select id="selectDangeDataMaxNo" resultType="Integer">
		select MAX(no)
		from sensorinfo
		WHERE readyn = 'n'
	</select>
	
	<select id="selectDangerSensorDataAtReadN" parameterType="hashmap" resultType="sensorInfo">
		SELECT s.no AS no, type, val, roomno,
                    s.reason AS reason,
                    s.readyn AS readyn,
                    s.regdate AS regdate,
                    s.checkdate AS checkdate,
                    m.roomName AS roomName
	    FROM sensorinfo s, meetingroominfo m
	    WHERE s.roomno = m.no
	    AND s.readyn = 'n'
	    AND s.no BETWEEN #{maxNo} and #{currentNo}
	    ORDER BY s.no DESC
	</select>
	
	<update id="updateSensorInfoReadyn" parameterType="hashmap">
		UPDATE sensorinfo
		SET readyn = 'y'
		WHERE no BETWEEN #{maxNo} and #{currentNo}
	</update>
	
</mapper>